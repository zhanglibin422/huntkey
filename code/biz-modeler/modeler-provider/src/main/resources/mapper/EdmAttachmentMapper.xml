<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huntkey.rx.modeler.provider.dao.EdmAttachmentMapper">
  <resultMap id="BaseResultMap" type="com.huntkey.rx.modeler.common.model.EdmAttachment">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="edma_edmc_id" jdbcType="VARCHAR" property="edmaEdmcId" />
    <result column="edma_type" jdbcType="TINYINT" property="edmaType" />
    <result column="edma_source_name" jdbcType="VARCHAR" property="edmaSourceName" />
    <result column="edma_name" jdbcType="VARCHAR" property="edmaName" />
    <result column="edma_path" jdbcType="VARCHAR" property="edmaPath" />
    <result column="edma_seq" jdbcType="INTEGER" property="edmaSeq" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="adduser" jdbcType="VARCHAR" property="adduser" />
    <result column="modtime" jdbcType="TIMESTAMP" property="modtime" />
    <result column="moduser" jdbcType="VARCHAR" property="moduser" />
    <result column="acctid" jdbcType="TINYINT" property="acctid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  AND ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  AND ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  AND ${criterion.condition} #{criterion.value} AND #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  AND ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  AND ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  AND ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  AND ${criterion.condition} #{criterion.value} AND #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  AND ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, edma_edmc_id, edma_type, edma_source_name, edma_name, edma_path, edma_seq, is_del, 
    addtime, adduser, modtime, moduser, acctid
  </sql>
  <select id="selectByExample" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachmentExample" resultMap="BaseResultMap">
    SELECT
    <if test="distinct">
      DISTINCT
    </if>
    <include refid="Base_Column_List" />
    FROM edm_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM edm_attachment
    WHERE id = #{id,jdbcType=VARCHAR} AND is_del != 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    DELETE FROM edm_attachment
    WHERE id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachmentExample">
    DELETE FROM edm_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachment">
    INSERT INTO edm_attachment (id, edma_edmc_id, edma_type,
      edma_source_name, edma_name, edma_path, 
      edma_seq, is_del, addtime, 
      adduser, modtime, moduser, 
      acctid)
    VALUES (#{id,jdbcType=VARCHAR}, #{edmaEdmcId,jdbcType=VARCHAR}, #{edmaType,jdbcType=TINYINT},
      #{edmaSourceName,jdbcType=VARCHAR}, #{edmaName,jdbcType=VARCHAR}, #{edmaPath,jdbcType=VARCHAR}, 
      #{edmaSeq,jdbcType=INTEGER}, #{isDel,jdbcType=TINYINT}, #{addtime,jdbcType=TIMESTAMP}, 
      #{adduser,jdbcType=VARCHAR}, #{modtime,jdbcType=TIMESTAMP}, #{moduser,jdbcType=VARCHAR}, 
      #{acctid,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachment">
    INSERT INTO edm_attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="edmaEdmcId != null">
        edma_edmc_id,
      </if>
      <if test="edmaType != null">
        edma_type,
      </if>
      <if test="edmaSourceName != null">
        edma_source_name,
      </if>
      <if test="edmaName != null">
        edma_name,
      </if>
      <if test="edmaPath != null">
        edma_path,
      </if>
      <if test="edmaSeq != null">
        edma_seq,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="adduser != null">
        adduser,
      </if>
      <if test="modtime != null">
        modtime,
      </if>
      <if test="moduser != null">
        moduser,
      </if>
      <if test="acctid != null">
        acctid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="edmaEdmcId != null">
        #{edmaEdmcId,jdbcType=VARCHAR},
      </if>
      <if test="edmaType != null">
        #{edmaType,jdbcType=TINYINT},
      </if>
      <if test="edmaSourceName != null">
        #{edmaSourceName,jdbcType=VARCHAR},
      </if>
      <if test="edmaName != null">
        #{edmaName,jdbcType=VARCHAR},
      </if>
      <if test="edmaPath != null">
        #{edmaPath,jdbcType=VARCHAR},
      </if>
      <if test="edmaSeq != null">
        #{edmaSeq,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduser != null">
        #{adduser,jdbcType=VARCHAR},
      </if>
      <if test="modtime != null">
        #{modtime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduser != null">
        #{moduser,jdbcType=VARCHAR},
      </if>
      <if test="acctid != null">
        #{acctid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachmentExample" resultType="java.lang.Long">
    SELECT count(*) FROM edm_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    UPDATE edm_attachment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.edmaEdmcId != null">
        edma_edmc_id = #{record.edmaEdmcId,jdbcType=VARCHAR},
      </if>
      <if test="record.edmaType != null">
        edma_type = #{record.edmaType,jdbcType=TINYINT},
      </if>
      <if test="record.edmaSourceName != null">
        edma_source_name = #{record.edmaSourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.edmaName != null">
        edma_name = #{record.edmaName,jdbcType=VARCHAR},
      </if>
      <if test="record.edmaPath != null">
        edma_path = #{record.edmaPath,jdbcType=VARCHAR},
      </if>
      <if test="record.edmaSeq != null">
        edma_seq = #{record.edmaSeq,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=TINYINT},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adduser != null">
        adduser = #{record.adduser,jdbcType=VARCHAR},
      </if>
      <if test="record.modtime != null">
        modtime = #{record.modtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moduser != null">
        moduser = #{record.moduser,jdbcType=VARCHAR},
      </if>
      <if test="record.acctid != null">
        acctid = #{record.acctid,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    UPDATE edm_attachment
    SET id = #{record.id,jdbcType=VARCHAR},
      edma_edmc_id = #{record.edmaEdmcId,jdbcType=VARCHAR},
      edma_type = #{record.edmaType,jdbcType=TINYINT},
      edma_source_name = #{record.edmaSourceName,jdbcType=VARCHAR},
      edma_name = #{record.edmaName,jdbcType=VARCHAR},
      edma_path = #{record.edmaPath,jdbcType=VARCHAR},
      edma_seq = #{record.edmaSeq,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=TINYINT},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      adduser = #{record.adduser,jdbcType=VARCHAR},
      modtime = #{record.modtime,jdbcType=TIMESTAMP},
      moduser = #{record.moduser,jdbcType=VARCHAR},
      acctid = #{record.acctid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachment">
    UPDATE edm_attachment
    <set>
      <if test="edmaEdmcId != null">
        edma_edmc_id = #{edmaEdmcId,jdbcType=VARCHAR},
      </if>
      <if test="edmaType != null">
        edma_type = #{edmaType,jdbcType=TINYINT},
      </if>
      <if test="edmaSourceName != null">
        edma_source_name = #{edmaSourceName,jdbcType=VARCHAR},
      </if>
      <if test="edmaName != null">
        edma_name = #{edmaName,jdbcType=VARCHAR},
      </if>
      <if test="edmaPath != null">
        edma_path = #{edmaPath,jdbcType=VARCHAR},
      </if>
      <if test="edmaSeq != null">
        edma_seq = #{edmaSeq,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="adduser != null">
        adduser = #{adduser,jdbcType=VARCHAR},
      </if>
      <if test="modtime != null">
        modtime = #{modtime,jdbcType=TIMESTAMP},
      </if>
      <if test="moduser != null">
        moduser = #{moduser,jdbcType=VARCHAR},
      </if>
      <if test="acctid != null">
        acctid = #{acctid,jdbcType=TINYINT},
      </if>
    </set>
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huntkey.rx.modeler.common.model.EdmAttachment">
    UPDATE edm_attachment
    SET edma_edmc_id = #{edmaEdmcId,jdbcType=VARCHAR},
      edma_type = #{edmaType,jdbcType=TINYINT},
      edma_source_name = #{edmaSourceName,jdbcType=VARCHAR},
      edma_name = #{edmaName,jdbcType=VARCHAR},
      edma_path = #{edmaPath,jdbcType=VARCHAR},
      edma_seq = #{edmaSeq,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=TINYINT},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      adduser = #{adduser,jdbcType=VARCHAR},
      modtime = #{modtime,jdbcType=TIMESTAMP},
      moduser = #{moduser,jdbcType=VARCHAR},
      acctid = #{acctid,jdbcType=TINYINT}
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectEdmAttachmentListByClassId" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM edm_attachment
    WHERE edma_edmc_id = #{classId,jdbcType=VARCHAR} AND is_del = 0
  </select>

  <!-- 根据类的id获取该类的所有附件 -->
  <select id="getListByCid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM edm_attachment WHERE 1=1 AND is_del != 1 AND edma_edmc_id = #{cid,jdbcType=VARCHAR}
    ORDER BY edma_seq ASC
  </select>
  <update id="updateIsDelByPrimaryKey" parameterType="java.lang.String">
    UPDATE edm_attachment SET
    is_del = 1
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <!--修改排序字段-->
  <update id="updateSeqById">
    UPDATE edm_attachment SET
    edma_seq = #{seq,jdbcType=INTEGER}
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO edm_attachment (id, edma_edmc_id, edma_type,
    edma_name, edma_source_name, edma_path, edma_seq,
    is_del, addtime, adduser,
    modtime, moduser, acctid
    )
    VALUES
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.edmaEdmcId,jdbcType=VARCHAR}, #{item.edmaType,jdbcType=TINYINT},
      #{item.edmaName,jdbcType=VARCHAR}, #{item.edmaSourceName,jdbcType=VARCHAR}, #{item.edmaPath,jdbcType=VARCHAR}, #{item.edmaSeq,jdbcType=INTEGER},
      #{item.isDel,jdbcType=TINYINT}, #{item.addtime,jdbcType=TIMESTAMP}, #{item.adduser,jdbcType=VARCHAR},
      #{item.modtime,jdbcType=TIMESTAMP}, #{item.moduser,jdbcType=VARCHAR}, #{item.acctid,jdbcType=TINYINT}
      )
    </foreach>
  </insert>
  <!-- 根据类的parentid获取该父类下最大的排序 -->
  <select id="getMaxSeqByEdmcId" resultType="java.lang.Integer" parameterType="java.lang.String">
    SELECT
    MAX(edma_seq)
    FROM edm_attachment WHERE 1=1  AND edma_edmc_id = #{edmaEdmcId,jdbcType=VARCHAR}
  </select>

  <!-- 通过ID获取附件名称 -->
  <select id="getAttachmentNameById" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT edma_name FROM edm_attachment WHERE id =#{id,jdbcType=VARCHAR} AND is_del != 1
  </select>

</mapper>